<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kk.community.dao.DiscussPostMapper">
    <resultMap id="BaseResultMap" type="com.kk.community.entity.DiscussPost">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="comment_count" property="commentCount" jdbcType="INTEGER"/>
        <result column="score" property="score" jdbcType="DOUBLE"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.kk.community.entity.DiscussPost" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, title, type, status, create_time, comment_count, score
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from discuss_post
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from discuss_post
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.kk.community.entity.DiscussPost">
    insert into discuss_post (id, user_id, title, 
      type, status, create_time, 
      comment_count, score, content
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{commentCount,jdbcType=INTEGER}, #{score,jdbcType=DOUBLE}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.kk.community.entity.DiscussPost" useGeneratedKeys="true"
            keyProperty="id">
        insert into discuss_post
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="commentCount != null">
                comment_count,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commentCount != null">
                #{commentCount,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                #{score,jdbcType=DOUBLE},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.kk.community.entity.DiscussPost">
        update discuss_post
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commentCount != null">
                comment_count = #{commentCount,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=DOUBLE},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kk.community.entity.DiscussPost">
    update discuss_post
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      comment_count = #{commentCount,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.kk.community.entity.DiscussPost">
    update discuss_post
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      comment_count = #{commentCount,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectListByPage" resultMap="ResultMapWithBLOBs" parameterType="INTEGER">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from discuss_post
        where status!=2
        <if test="userId != null">
            and user_id = #{userId,jdbcType=INTEGER}
        </if>
        <if test="orderMode==0">
            order by type desc ,create_time desc
        </if>
        <if test="orderMode==1">
            order by type desc ,score desc,create_time desc
        </if>
    </select>

    <select id="selectMyListByPage" resultMap="ResultMapWithBLOBs" parameterType="INTEGER">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from discuss_post
        where status!=2
        <if test="userId != null">
            and user_id = #{userId,jdbcType=INTEGER}
        </if>
        order by type desc ,create_time desc
    </select>

    <select id="selectMyDiscussPostCount" parameterType="INTEGER" resultType="int">
        select count(id)
        from discuss_post
        where user_id=#{userId,jdbcType=INTEGER}
    </select>

    <update id="updateCommentCount">
    update discuss_post set comment_count = #{commentCount} where id=#{id}
  </update>

    <update id="updateType">
    update discuss_post set type=#{type} where id=#{id}
  </update>
    <update id="updateStatus">
    update discuss_post set status=#{status} where id=#{id}
  </update>

    <update id="updateScore">
    update discuss_post set score=#{score} where id=#{id}
  </update>
</mapper>